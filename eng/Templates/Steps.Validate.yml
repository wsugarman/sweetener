parameters:
- name: project
  type: string
  default: ''
- name: type
  type: string
  default: ''
- name: buildConfiguration
  type: string
  default: 'Debug'
- name: lineCoverageThreshold
  type: number
  default: 1
- name: branchCoverageThreshold
  type: number
  default: 1

steps:
- checkout: self
  clean: true

- task: UseDotNet@2
  displayName: 'Install .NET 5.x SDK'
  inputs:
    packageType: 'sdk'
    version: '5.x'

- task: DotNetCoreCLI@2
  displayName: 'Run Tests and Collect Code Coverage'
  inputs:
    command: 'test'
    projects: 'src/${{ parameters.Type }}/${{ parameters.Project }}.Test/${{ parameters.Project }}.Test.csproj'
    arguments: '-c ${{ parameters.BuildConfiguration }} -p:ContinuousIntegrationBuild=true -warnaserror --collect "XPlat Code Coverage" -s "$(Build.Repository.LocalPath)/src/CodeCoverage.runsettings" -v normal -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Include=[${{ parameters.Project }}]*'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/*/coverage.cobertura.xml'
    failIfCoverageEmpty: true
    condition: succeededOrFailed()

- task: PowerShell@2
  displayName: 'Check Code Coverage'
  inputs:
    filePath: 'eng/Scripts/CheckCodeCoverage.ps1'
    arguments: '-CodeCoverageFile "$(Agent.TempDirectory)/*/coverage.cobertura.xml" -LineCoverageThreshold ${{ parameters.LineCoverageThreshold }} -BranchCoverageThreshold ${{ parameters.BranchCoverageThreshold }}'
    pwsh: true
