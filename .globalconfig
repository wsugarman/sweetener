# Global AnalyzerConfig file
# For details: https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/configuration-files
# For rules: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
is_global = true

# Language code styles
# Most use "options_name = false|true : none|silent|suggestion|warning|error"

# .NET code style settings 
# "This." and "Me." qualifiers
dotnet_style_qualification_for_field    = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method   = false:suggestion
dotnet_style_qualification_for_event    = false:suggestion

# Language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access             = true:suggestion

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warn
csharp_preferred_modifier_order              = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion
dotnet_style_readonly_field                  = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators      = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators             = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Expression-level preferences
dotnet_style_object_initializer                                  = true:suggestion
dotnet_style_collection_initializer                              = true:suggestion
dotnet_style_explicit_tuple_names                                = true:suggestion
dotnet_style_prefer_inferred_tuple_names                         = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names         = true:suggestion
dotnet_style_prefer_auto_properties                              = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment       = true:suggestion
dotnet_style_prefer_conditional_expression_over_return           = false:silent

# "Null" checking preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation    = true:suggestion

# C# code style settings
# Implicit and explicit types
csharp_style_var_for_built_in_types    = false:suggestion
csharp_style_var_when_type_is_apparent = false:none
csharp_style_var_elsewhere             = false:suggestion

# 'new(...)' ctor
csharp_style_implicit_object_creation_when_type_is_apparent = false

# Expression-bodied members
csharp_style_expression_bodied_methods      = true:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators    = true:silent
csharp_style_expression_bodied_properties   = true:suggestion
csharp_style_expression_bodied_indexers     = true:suggestion
csharp_style_expression_bodied_accessors    = true:suggestion

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Inlined variable declarations
csharp_style_inlined_variable_declaration = true:suggestion

# Expression-level preferences
csharp_prefer_simple_default_expression            = true:suggestion
csharp_style_deconstructed_variable_declaration    = true:suggestion
csharp_style_pattern_local_over_anonymous_function = false:suggestion

# "Null" checking preferences
csharp_style_throw_expression          = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Code block preferences
csharp_prefer_braces = false:suggestion

# Formatting conventions
# Most use "rule_name = false|true"

# .NET formatting settings
# Organize usings
dotnet_sort_system_directives_first     = true
dotnet_separate_import_directive_groups = false

# C# formatting settings
# Newline options
csharp_new_line_before_open_brace                     = all
csharp_new_line_before_else                           = true
csharp_new_line_before_catch                          = true
csharp_new_line_before_finally                        = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types     = true
csharp_new_line_between_query_expression_clauses      = true

# Indentation options
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels        = no_change

# Spacing options
csharp_space_after_cast                                                  = false
csharp_space_after_keywords_in_control_flow_statements                   = true
csharp_space_between_method_declaration_parameter_list_parentheses       = false
csharp_space_between_method_call_parameter_list_parentheses              = false
csharp_space_before_colon_in_inheritance_clause                          = true
csharp_space_after_colon_in_inheritance_clause                           = true
csharp_space_around_binary_operators                                     = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis            = false
csharp_space_between_method_call_empty_parameter_list_parentheses        = false

# Wrapping options
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks     = true

# Naming conventions ("borrowed" from CoreFX)
# See https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions

# name all constant fields using PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style    = pascal_case_style

dotnet_naming_symbols.constant_fields.applicable_kinds   = field
dotnet_naming_symbols.constant_fields.required_modifiers = const

# name all static readonly fields using PascalCase
dotnet_naming_rule.static_readonly_fields_pascal_case.severity = suggestion
dotnet_naming_rule.static_readonly_fields_pascal_case.symbols  = static_readonly_fields
dotnet_naming_rule.static_readonly_fields_pascal_case.style    = pascal_case_style

dotnet_naming_symbols.static_readonly_fields.applicable_kinds           = field
dotnet_naming_symbols.static_readonly_fields.applicable_accessibilities = private
dotnet_naming_symbols.static_readonly_fields.required_modifiers         = readonly,static

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# static fields should have s_ prefix
dotnet_naming_rule.static_private_internal_fields_should_have_prefix.severity = suggestion
dotnet_naming_rule.static_private_internal_fields_should_have_prefix.symbols  = static_private_internal_fields
dotnet_naming_rule.static_private_internal_fields_should_have_prefix.style    = static_prefix_style

dotnet_naming_symbols.static_private_internal_fields.applicable_kinds           = field
dotnet_naming_symbols.static_private_internal_fields.applicable_accessibilities = private
dotnet_naming_symbols.static_private_internal_fields.required_modifiers         = static

dotnet_naming_style.static_prefix_style.required_prefix = s_
dotnet_naming_style.static_prefix_style.capitalization  = camel_case

# internal and private fields should be _camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity = suggestion
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols  = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style    = camel_case_underscore_style

dotnet_naming_symbols.private_internal_fields.applicable_kinds           = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private

dotnet_naming_style.camel_case_underscore_style.required_prefix = _
dotnet_naming_style.camel_case_underscore_style.capitalization  = camel_case

# FxCop
# See https://github.com/dotnet/roslyn-analyzers/blob/master/docs/Analyzer%20Configuration.md
# General Rules
dotnet_code_quality.api_surface = all
dotnet_code_quality.exclude_async_void_methods = true
dotnet_code_quality.exclude_single_letter_type_parameters = true
dotnet_code_quality.exclude_extension_method_this_parameter = true
dotnet_code_quality.dispose_analysis_kind = AllPaths
dotnet_code_quality.enum_values_prefix_trigger = AllEnumValues
dotnet_code_quality.exclude_indirect_base_types  = false

# Specific Rules
# required_modifiers
dotnet_code_quality.CA1802 = static
