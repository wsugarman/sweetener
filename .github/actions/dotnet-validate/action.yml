name: .NET Validate
description: Ensures quality by running cross-platform tests and code coverage
inputs:
  project:
    description: The name of the csproj file
    required: true
  solution:
    description: The name of the solution file
    required: true
  buildConfiguration:
    default: Debug
    description: The dotnet build configuration
    required: false
  lineCoverageThreshold:
    default: '1'
    description: The minimum line coverage
    required: false
  branchCoverageThreshold:
    default: '1'
    description: The minimum branch coverage
    required: false
runs:
  using: composite
  steps:
    - name: Setup
      uses: actions/setup-dotnet@v1.8.2
      with:
        dotnet-version: '5.0.x'

    - name: Build and Test
      shell: bash
      run: |
        dotnet test "./src/${{ inputs.solution }}/${{ inputs.project }}.Test/${{ inputs.project }}.Test.csproj" \
          -c "${{ inputs.buildConfiguration }}" \
          -p:ContinuousIntegrationBuild=true \
          -warnaserror \
          -r "./tests"
          --collect "XPlat Code Coverage" \
          -s "$GITHUB_WORKSPACE/src/CodeCoverage.runsettings" \
          -v normal -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Include=[${{ inputs.project }}]*

    - name: Generate Code Coverage Report
      uses: danielpalme/ReportGenerator-GitHub-Action@4.8.12
      with:
        reports: ./tests/TestResults/*/coverage.cobertura.xml
        reporttypes: Cobertura
        targetdir: $RUNNER_TEMP/codecoverage

    - name: Upload Code Coverage Report
      uses: actions/upload-artifact@v2.2.3
      with:
        name: CodeCoverage
        path: $RUNNER_TEMP/codecoverage

    - name: Check Code Coverage
      shell: pwsh
      run: |
        eng/Scripts/CheckCodeCoverage.ps1 \
          -CodeCoverageFile "./tests/TestResults/*/coverage.cobertura.xml" \
          -LineCoverageThreshold ${{ inputs.lineCoverageThreshold }} \
          -BranchCoverageThreshold ${{ inputs.branchCoverageThreshold }}
